name: Build & Release

on:
  push:
    branches: [ 1.21.1 ]
    paths-ignore:
      - '*.md'

jobs:
  build:
    name: Build & Release
    runs-on: ubuntu-latest
    permissions: write-all

    env:
      MAKE_LATEST: true

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: temurin

      - name: Read version from gradle.properties
        id: version
        run: |
          VERSION=$(grep "^mod_version" gradle.properties | cut -d '=' -f2 | tr -d ' ')
          MC_VERSION=$(grep "^minecraft_version" gradle.properties | cut -d '=' -f2 | tr -d ' ')
          TAG_NAME="mc${MC_VERSION}-v${VERSION}"
          RELEASE_NAME="${MC_VERSION} build"

          echo "version=$VERSION" >> "$GITHUB_OUTPUT"
          echo "mc_version=$MC_VERSION" >> "$GITHUB_OUTPUT"
          echo "tag=$TAG_NAME" >> "$GITHUB_OUTPUT"
          echo "release_name=$RELEASE_NAME" >> "$GITHUB_OUTPUT"

      - name: Check if tag already exists
        id: tag_check
        run: |
          if git ls-remote --tags origin refs/tags/${{ steps.version.outputs.tag }} | grep -q .; then
            echo "Tag already exists, skipping build."
            echo "skip=true" >> "$GITHUB_OUTPUT"
          else
            echo "skip=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Stop job if version was already built
        if: steps.tag_check.outputs.skip == 'true'
        run: echo "Skipping build because version already exists."

      - name: Grant execute permissions to gradlew
        if: steps.tag_check.outputs.skip != 'true'
        run: chmod +x ./gradlew

      - name: Build addon
        if: steps.tag_check.outputs.skip != 'true'
        run: ./gradlew build

      - name: Create GitHub Release
        if: steps.tag_check.outputs.skip != 'true'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.version.outputs.tag }}
          name: ${{ steps.version.outputs.release_name }}
          files: build/libs/*.jar
          make_latest: ${{ env.MAKE_LATEST }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
